#ifndef MULTIMEDIADXVAHD_H
#define MULTIMEDIADXVAHD_H

#include <windows.h>
#include <d3d9.h>

typedef enum _DXVAHD_FRAME_FORMAT {
  DXVAHD_FRAME_FORMAT_PROGRESSIVE = 0,
  DXVAHD_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST = 1,
  DXVAHD_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST	= 2
} DXVAHD_FRAME_FORMAT;

typedef enum _DXVAHD_DEVICE_USAGE {
  DXVAHD_DEVICE_USAGE_PLAYBACK_NORMAL = 0,
  DXVAHD_DEVICE_USAGE_OPTIMAL_SPEED	= 1,
  DXVAHD_DEVICE_USAGE_OPTIMAL_QUALITY = 2
} DXVAHD_DEVICE_USAGE;

typedef enum _DXVAHD_DEVICE_TYPE {
  DXVAHD_DEVICE_TYPE_HARDWARE = 0,
  DXVAHD_DEVICE_TYPE_SOFTWARE = 1,
  DXVAHD_DEVICE_TYPE_REFERENCE = 2,
  DXVAHD_DEVICE_TYPE_OTHER = 3
} DXVAHD_DEVICE_TYPE;

typedef enum _DXVAHD_FILTER {
  DXVAHD_FILTER_BRIGHTNESS = 0,
  DXVAHD_FILTER_CONTRAST = 1,
  DXVAHD_FILTER_HUE = 2,
  DXVAHD_FILTER_SATURATION = 3,
  DXVAHD_FILTER_NOISE_REDUCTION = 4,
  DXVAHD_FILTER_EDGE_ENHANCEMENT = 5,
  DXVAHD_FILTER_ANAMORPHIC_SCALING = 6
} DXVAHD_FILTER;

typedef enum _DXVAHD_STREAM_STATE {
  DXVAHD_STREAM_STATE_D3DFORMAT	= 0,
  DXVAHD_STREAM_STATE_FRAME_FORMAT = 1,
  DXVAHD_STREAM_STATE_INPUT_COLOR_SPACE	= 2,
  DXVAHD_STREAM_STATE_OUTPUT_RATE = 3,
  DXVAHD_STREAM_STATE_SOURCE_RECT = 4,
  DXVAHD_STREAM_STATE_DESTINATION_RECT = 5,
  DXVAHD_STREAM_STATE_ALPHA	= 6,
  DXVAHD_STREAM_STATE_PALETTE = 7,
  DXVAHD_STREAM_STATE_LUMA_KEY = 8,
  DXVAHD_STREAM_STATE_ASPECT_RATIO = 9,
  DXVAHD_STREAM_STATE_FILTER_BRIGHTNESS	= 100,
  DXVAHD_STREAM_STATE_FILTER_CONTRAST = 101,
  DXVAHD_STREAM_STATE_FILTER_HUE = 102,
  DXVAHD_STREAM_STATE_FILTER_SATURATION	= 103,
  DXVAHD_STREAM_STATE_FILTER_NOISE_REDUCTION = 104,
  DXVAHD_STREAM_STATE_FILTER_EDGE_ENHANCEMENT = 105,
  DXVAHD_STREAM_STATE_FILTER_ANAMORPHIC_SCALING	= 106,
  DXVAHD_STREAM_STATE_PRIVATE = 1000
} DXVAHD_STREAM_STATE;

typedef enum _DXVAHD_BLT_STATE {
  DXVAHD_BLT_STATE_TARGET_RECT = 0,
  DXVAHD_BLT_STATE_BACKGROUND_COLOR = 1,
  DXVAHD_BLT_STATE_OUTPUT_COLOR_SPACE = 2,
  DXVAHD_BLT_STATE_ALPHA_FILL = 3,
  DXVAHD_BLT_STATE_CONSTRICTION	= 4,
  DXVAHD_BLT_STATE_PRIVATE = 1000
} DXVAHD_BLT_STATE;

//--------------------------------------------------------------------------------------------

typedef struct _DXVAHD_RATIONAL {
  UINT Numerator;
  UINT Denominator;
} DXVAHD_RATIONAL;

typedef struct _DXVAHD_CONTENT_DESC {
  DXVAHD_FRAME_FORMAT InputFrameFormat;
  DXVAHD_RATIONAL     InputFrameRate;
  UINT                InputWidth;
  UINT                InputHeight;
  DXVAHD_RATIONAL     OutputFrameRate;
  UINT                OutputWidth;
  UINT                OutputHeight;
} DXVAHD_CONTENT_DESC;

typedef struct _DXVAHD_VPCAPS {
  GUID VPGuid;
  UINT PastFrames;
  UINT FutureFrames;
  UINT ProcessorCaps;
  UINT ITelecineCaps;
  UINT CustomRateCount;
} DXVAHD_VPCAPS;

typedef struct _DXVAHD_VPDEVCAPS {
  DXVAHD_DEVICE_TYPE DeviceType;
  UINT               DeviceCaps;
  UINT               FeatureCaps;
  UINT               FilterCaps;
  UINT               InputFormatCaps;
  D3DPOOL            InputPool;
  UINT               OutputFormatCount;
  UINT               InputFormatCount;
  UINT               VideoProcessorCount;
  UINT               MaxInputStreams;
  UINT               MaxStreamStates;
} DXVAHD_VPDEVCAPS;

typedef struct _DXVAHD_FILTER_RANGE_DATA {
  INT   Minimum;
  INT   Maximum;
  INT   Default;
  FLOAT Multiplier;
} DXVAHD_FILTER_RANGE_DATA;

typedef struct _DXVAHD_STREAM_DATA {
  BOOL              Enable;
  UINT              OutputIndex;
  UINT              InputFrameOrField;
  UINT              PastFrames;
  UINT              FutureFrames;
  IDirect3DSurface9 **ppPastSurfaces;
  IDirect3DSurface9 *pInputSurface;
  IDirect3DSurface9 **ppFutureSurfaces;
} DXVAHD_STREAM_DATA;

typedef struct _DXVAHD_STREAM_STATE_FILTER_DATA {
  BOOL Enable;
  INT  Level;
} DXVAHD_STREAM_STATE_FILTER_DATA;

typedef struct _DXVAHD_STREAM_STATE_D3DFORMAT_DATA {
  D3DFORMAT Format;
} DXVAHD_STREAM_STATE_D3DFORMAT_DATA;

typedef struct _DXVAHD_STREAM_STATE_ALPHA_DATA {
  BOOL  Enable;
  FLOAT Alpha;
} DXVAHD_STREAM_STATE_ALPHA_DATA;

typedef struct _DXVAHD_STREAM_STATE_FRAME_FORMAT_DATA {
  DXVAHD_FRAME_FORMAT FrameFormat;
} DXVAHD_STREAM_STATE_FRAME_FORMAT_DATA;

typedef struct _DXVAHD_STREAM_STATE_SOURCE_RECT_DATA {
  BOOL Enable;
  RECT SourceRect;
} DXVAHD_STREAM_STATE_SOURCE_RECT_DATA;

typedef struct _DXVAHD_STREAM_STATE_DESTINATION_RECT_DATA {
  BOOL Enable;
  RECT DestinationRect;
} DXVAHD_STREAM_STATE_DESTINATION_RECT_DATA;

typedef struct _DXVAHD_COLOR_RGBA {
  FLOAT R;
  FLOAT G;
  FLOAT B;
  FLOAT A;
} DXVAHD_COLOR_RGBA;

typedef struct _DXVAHD_COLOR_YCbCrA {
  FLOAT Y;
  FLOAT Cb;
  FLOAT Cr;
  FLOAT A;
} DXVAHD_COLOR_YCbCrA;

typedef union _DXVAHD_COLOR {
  DXVAHD_COLOR_RGBA   RGB;
  DXVAHD_COLOR_YCbCrA YCbCr;
} DXVAHD_COLOR;

typedef struct _DXVAHD_BLT_STATE_BACKGROUND_COLOR_DATA {
  BOOL         YCbCr;
  DXVAHD_COLOR BackgroundColor;
} DXVAHD_BLT_STATE_BACKGROUND_COLOR_DATA;

#endif // MULTIMEDIADXVAHD_H
